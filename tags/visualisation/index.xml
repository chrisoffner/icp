<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>visualisation on Chris Offner</title>
    <link>https://chrisoffner.github.io/studynotes/tags/visualisation/</link>
    <description>Recent content in visualisation on Chris Offner</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 21 Nov 2021 19:08:00 +0100</lastBuildDate><atom:link href="https://chrisoffner.github.io/studynotes/tags/visualisation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Deriving the optimal ICP translation</title>
      <link>https://chrisoffner.github.io/studynotes/posts/2021/11/deriving-the-optimal-icp-translation/</link>
      <pubDate>Sun, 21 Nov 2021 19:08:00 +0100</pubDate>
      
      <guid>https://chrisoffner.github.io/studynotes/posts/2021/11/deriving-the-optimal-icp-translation/</guid>
      <description>In their paper On the ICP Algorithm the authors Esther Ezra, Micha Sharir, and Alon Efrat write:
 Lemma 2.3 At each iteration $i \ge 2$ of the algorithm, the relative translation vector $\Delta t_i$ satisfies
$$\boldsymbol{\Delta t_i} = \frac{1}{m} \sum_{\boldsymbol{a} \in A} \left(N_B(\boldsymbol{a} + \boldsymbol{t_{i-1}}) - N_B(\boldsymbol{a} + \boldsymbol{t_{i-2}})\right),$$
where $\boldsymbol{t_j} = \sum_{k=1}^j \boldsymbol{\Delta t_k}.$
Proof Follows using easy algebraic manipulations, based on the obvious equality that follows by construction</description>
    </item>
    
    <item>
      <title>Illustrating ICP in one dimension</title>
      <link>https://chrisoffner.github.io/studynotes/posts/2021/11/illustrating-icp-in-one-dimension/</link>
      <pubDate>Sun, 21 Nov 2021 16:35:48 +0100</pubDate>
      
      <guid>https://chrisoffner.github.io/studynotes/posts/2021/11/illustrating-icp-in-one-dimension/</guid>
      <description>To get a better intuition of what the iterative closest point (ICP) algorithm does, let&amp;rsquo;s look at a visual representation of its simplest form â€“ the one-dimensional case which is only concerned with translation, but not rotation.
Problem definition Let $A = \{{\boldsymbol{a_1}, &amp;hellip;, \boldsymbol{a_m}\}}, B = \{{\boldsymbol{b_1}, &amp;hellip;, \boldsymbol{b_n} \}}$ be two point sets in $d$-space, in the following illustration $d = 1$, and suppose that the ICP algorithm aligns $A$ to $B$, i.</description>
    </item>
    
  </channel>
</rss>
